# Install packages with apt
- name: Install convenient apt packages
  apt:
    name: ['attr', 'autoconf', 'bat', 'command-not-found', 'dnsutils', 'expect', 'gdb', 'grc', 'htop', 'jq', 'lsb-release', 'net-tools', 'pandoc', 'peco', 'python3-ipython', 'rlwrap', 'tig', 'tmux', 'traceroute', 'unionfs-fuse', 'util-linux', 'xsel', 'zsh']
    state: present
  become: yes

- name: Install fonts
  block:
  - name: Ensure font directory exists
    file:
      path: "{{ ansible_env.HOME }}/.local/share/fonts"
      state: directory
  - name: Download and install JetBrainsMono
    unarchive:
      src: https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
      dest: "{{ ansible_env.HOME }}/.local/share/fonts"
      remote_src: yes
  - name: Download and install CascadiaCode
    unarchive:
      src: https://github.com/microsoft/cascadia-code/releases/download/v2404.23/CascadiaCode-2404.23.zip
      dest: "{{ ansible_env.HOME }}/.local/share/fonts"
      remote_src: yes

- name: Setup GUI Applications
  block:
    - name: Add Google Chrome key
      apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present
    - name: Add Google Chrome repository
      apt_repository:
        repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb stable main
        state: present
        filename: google-chrome
    - name: Install Google Chrome
      apt:
        name: google-chrome-stable
        update_cache: yes
        state: present
    - name: Add VSCode key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Add VSCode repository
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present
        filename: vscode
    - name: Install VSCode
      apt:
        name: code
        state: present
        update_cache: yes
  become: true
  when: not ('WSLENV' in ansible_env)

- name: Setup latest stable Docker
  block:
    - name: Add Docker key
      apt_key:
        url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
        state: present
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable
        state: present
        filename: docker
    - name: Install Docker related packages
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-buildx-plugin', 'docker-compose-plugin']
        update_cache: yes
        state: present
    - name: Add current user to docker group
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes
  become: true

- name: Setup GitHub CLI
  block:
    - name: Add gh key
      apt_key:
        url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
        state: present
    - name: Add gh repository
      apt_repository:
        repo: deb [arch=amd64] https://cli.github.com/packages stable main
        state: present
        filename: github-cli
    - name: Install gh related packages
      apt:
        name: gh
        update_cache: yes
        state: present
    - name: Add zsh completion
      shell: gh completion -s zsh > /usr/local/share/zsh/site-functions/_gh
  become: true

# Setup configs
- name: Create symbolic link for bashrc
  file:
    src: "{{ role_path }}/../../non-sudoer/rc.bash"
    dest: "{{ ansible_env.HOME }}/.bashrc"
    state: link
    force: true

- name: Create symbolic link for tmux config
  file:
    src: "{{ role_path }}/tmux/tmux.conf"
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    state: link

- name: Create symbolic link for docker config
  file:
    src: "{{ role_path }}/docker"
    dest: "{{ ansible_env.HOME }}/.docker"
    state: link

- name: Create ~/.config/git for creating git config
  file:
    path: "{{ ansible_env.HOME }}/.config/git"
    state: directory
    recurse: yes

- name: Create symbolic link for git config
  file:
    src: "{{ role_path }}/git/gitignore_global"
    dest: "{{ ansible_env.HOME }}/.config/git/ignore"
    state: link

- name: Create symbolic link for gdb-dashboard
  file:
    src: "{{ role_path }}/gdb/gdb-dashboard/.gdbinit"
    dest: "{{ ansible_env.HOME }}/.gdbinit"
    state: link

- name: Setup Miniconda
  block:
    - name: Download Miniconda shell script
      get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: "{{ ansible_env.HOME }}/miniconda.sh"
    - name: Install Miniconda
      shell: /usr/bin/env sh ./miniconda.sh -b -u
      args:
        chdir: "{{ ansible_env.HOME }}"

- name: Create symbolic link for condarc
  file:
    src: "{{ role_path }}/conda/condarc"
    dest: "{{ ansible_env.HOME }}/.condarc"
    state: link

- name: Setup nvm, nodejs
  block:
    - name: Git clone NVM
      git:
        repo: https://github.com/nvm-sh/nvm
        dest: "{{ ansible_env.HOME }}/.nvm"
        depth: 1
        version: v0.39.7
    - name: Install Node.js LTS with nvm
      shell: /usr/bin/env bash -lc "source ~/.nvm/nvm.sh && nvm install --lts v18.16.0"
      ignore_errors: true
    - name: Use default Node.js LTS
      shell: /usr/bin/env bash -lc "source ~/.nvm/nvm.sh && nvm use v18.16.0"
      ignore_errors: true
    - name: Set default Node.js LTS
      shell: /usr/bin/env bash -lc "source ~/.nvm/nvm.sh && nvm alias default v18.16.0"
      ignore_errors: true

- name: Setup try
  block:
    - name: Create ~/.local/src for cloning src
      file:
        path: "{{ ansible_env.HOME }}/.local/src"
        state: directory
        recurse: yes
    - name: Create ~/.local/bin
      file:
        path: "{{ ansible_env.HOME }}/.local/bin"
        state: directory
        recurse: yes
    - name: Git clone try
      git:
        repo: https://github.com/binpash/try
        dest: "{{ ansible_env.HOME }}/.local/src/try"
        depth: 1
        version: v0.2.0
    - name: Install try executable
      file:
        src: "{{ ansible_env.HOME }}/.local/src/try/try"
        dest: "{{ ansible_env.HOME }}/.local/bin/try"
        state: link
