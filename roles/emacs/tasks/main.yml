# Copy light version of emacs config
- name: Create symbolic link for light version of Emacs config
  file:
    src: "{{ role_path }}/../../non-sudoer/emacs.el"
    dest: "{{ ansible_env.HOME }}/.emacs-light.el"
    state: link

- name: Create user tmp directory for saving backup
  file:
    path: "{{ ansible_env.HOME }}/tmp"
    state: directory
    recurse: yes

# Install system emacs for light version of emacs
- name: Install system emacs
  apt:
    name: emacs
    state: present
  become: yes

- name: Install common packages for emacs 28/29
  apt:
    name: ['black', 'clangd', 'elpa-anzu', 'elpa-cmake-mode', 'elpa-company', 'elpa-dockerfile-mode', 'elpa-doom-themes', 'elpa-eglot', 'elpa-find-file-in-project', 'elpa-helm', 'elpa-helm-ag', 'elpa-ligature', 'elpa-magit', 'elpa-markdown-mode', 'elpa-use-package', 'elpa-yaml-mode', 'elpa-yasnippet', 'isort', 'npm', 'python3-debugpy', 'python3-pylsp', 'shellcheck']
    update_cache: true
  become: yes
  when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "24") or (ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "12")

- name: Install common packages for emacs 26/27/28
  apt:
    name: ['black', 'clangd', 'elpa-anzu', 'elpa-company', 'elpa-find-file-in-project', 'elpa-helm', 'elpa-helm-ag', 'elpa-magit', 'elpa-markdown-mode', 'elpa-use-package', 'elpa-yaml-mode', 'elpa-yasnippet', 'isort', 'shellcheck']
    update_cache: true
  become: yes
  when: (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "20") or (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "22") or (ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "11")

# Install pip packages
- name: Install cmake language server and pyright
  pip:
    executable: pip3
    name: ['black', 'debugpy', 'pyright']
  become: yes
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: 1

- name: Create emacs config directory
  file:
    path: "{{ ansible_env.HOME }}/.config/emacs"
    state: directory
    recurse: yes

- name: Create symbolic link for Emacs config
  file:
    src: "{{ role_path }}/config/init.el"
    dest: "{{ ansible_env.HOME }}/.config/emacs/init.el"
    state: link
    force: yes

- name: Create symbolic link for Emacs snippets
  file:
    src: "{{ role_path }}/config/snippets"
    dest: "{{ ansible_env.HOME }}/.config/emacs/snippets"
    state: link
    force: yes

