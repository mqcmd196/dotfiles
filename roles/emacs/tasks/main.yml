# Copy light version of emacs config
- name: Create symbolic link for light version of Emacs config
  file:
    src: "{{ role_path }}/../../non-sudoer/emacs.el"
    dest: "{{ ansible_env.HOME }}/.emacs-light.el"
    state: link

# Install apt packages
- name: Install common packages for emacs28
  apt:
    name: ['cmigemo', 'build-essential', 'cmake', 'texinfo', 'libgnutls28-dev', 'libjpeg-dev', 'libpng-dev', 'libtiff5-dev', 'libgif-dev', 'libxpm-dev', 'libncurses-dev', 'libgtk-3-dev', 'libjansson4', 'libjansson-dev', 'libgccjit0', 'librsvg2-dev', 'glslang-tools', 'isort', 'shellcheck']
    state: present
  become: yes

- name: Install common packages for emacs28 in Ubuntu jammy
  apt:
    name: ['ripgrep', 'fd-find', 'libgccjit-11-dev']
    state: present
  become: yes
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "22"

- name: Install common packages for emacs28 in Debian bullseye
  apt:
    name: ['ripgrep', 'fd-find', 'libgccjit-10-dev']
    state: present
  become: yes
  when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "11"

- name: Install common packages for emacs28 in Ubuntu focal
  apt:
    name: ['ripgrep', 'fd-find', 'libgccjit-9-dev']
    state: present
  become: yes
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "20"

# Install pip packages
- name: Install cmake language server and pyright
  pip:
    executable: pip3
    name: ['cmake-language-server', 'pyright', 'black', 'debugpy']
  become: yes

- name: Create ~/.local/src for cloning source
  file:
    path: "{{ ansible_env.HOME }}/.local/src"
    state: directory
    recurse: yes

# Install emacs with native-compile
- name: Install emacs28.1
  block:
    - name: Unarchive emacs source
      unarchive:
        src: http://ftp.gnu.org/gnu/emacs/emacs-28.1.tar.xz
        dest: "{{ ansible_env.HOME }}/.local/src"
        remote_src: true
    - name: Configure emacs in Debian bullseye and Ubuntu focal
      when: ( ansible_facts['distribution'] == "Ubuntu" and ( ansible_facts['distribution_major_version'] == "22" or ansible_facts['distribution_major_version'] == "20" ) ) or ( ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "11" )
      shell: >
        ./configure
        --prefix={{ ansible_env.HOME }}/.local
        --with-native-compilation
        --with-json
        --with-gnutls
        --with-cairo
        chdir="{{ ansible_env.HOME }}/.local/src/emacs-28.1"
    - name: Build emacs
      shell: >
        make -j8 install
        chdir="{{ ansible_env.HOME }}/.local/src/emacs-28.1"

- name: Install LLVM and clangd
  when: not (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "22")
  block:
    - name: Git clone LLVM project on Debian bullseye and Ubuntu focal
      when: ( ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "20" ) or ( ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "11" )
      git:
        repo: https://github.com/llvm/llvm-project
        dest: "{{ ansible_env.HOME }}/.local/src/llvm-project"
        version: llvmorg-15.0.7
    - name: Create build directory
      file:
        path: "{{ ansible_env.HOME }}/.local/src/llvm-project/build"
        state: directory
        recurse: yes
    - name: Configure with cmake
      shell: >
        cmake
        -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra"
        -DLLVM_TARGETS_TO_BUILD="X86"
        -DCMAKE_INSTALL_PREFIX={{ ansible_env.HOME }}/.local/
        -DCMAKE_BUILD_TYPE=MinSizeRel
        -G "Unix Makefiles"
        ../llvm
        chdir="{{ ansible_env.HOME }}/.local/src/llvm-project/build"
    - name: Build LLVM
      shell: >
        make -j8 install
        chdir="{{ ansible_env.HOME }}/.local/src/llvm-project/build"

- name: Install clangd-15 on Ubuntu jammy
  apt:
    name: clangd-15
    state: present
  become: yes
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "22"

# Setup Doom Emacs
- name: Setup Doom Emacs
  block:
    - name: Git clone Doom Emacs
      git:
        repo: https://github.com/doomemacs/doomemacs.git
        dest: "{{ ansible_env.HOME }}/.emacs.d/"
        version: 63586423dab6248d6e5acfc68dc4324c15f05d83
    - name: Create symbolic links for Doom Emacs configs
      file:
        src: "{{ role_path }}/doom/config"
        dest: "{{ ansible_env.HOME }}/.doom.d"
        state: link
    - name: Setup Doom Emacs
      vars:
        doom: "{{ ansible_env.HOME }}/.emacs.d/bin/doom"
      shell: /bin/bash -lc "{{ doom }} install --force && {{ doom }} sync"
